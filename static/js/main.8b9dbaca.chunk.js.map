{"version":3,"sources":["TodoItem.js","todosData.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","prevState","map","todo","todoItems","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8LAqBeA,MAnBf,SAAkBC,GAOd,OACI,yBAAKC,UAAU,aACX,2BACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAElD,uBAAGC,MAAST,EAAMI,KAAKC,UAbR,CACnBK,UAAW,SACXC,MAAO,SACPC,eAAgB,gBAUuC,MAAOZ,EAAMI,KAAKS,QC8BlEC,EA9CG,CACd,CACIN,GAAI,EACJK,KAAM,4BACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,eACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,wBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,QACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAGf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAGf,CACIG,GAAI,EACJK,KAAM,4BACNR,WAAW,GAGf,CACIG,GAAI,EACJK,KAAM,uBACNR,WAAW,ICDJU,E,YApCb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACTC,MAAOH,GAEX,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBALR,E,0EAQDV,GAEXW,KAAKC,UAAS,SAAAC,GAOZ,MAAO,CACLJ,MAPmBI,EAAUJ,MAAMK,KAAI,SAAAC,GAIvC,OAHIA,EAAKf,KAAOA,IACde,EAAKlB,WAAakB,EAAKlB,WAElBkB,W,+BASH,IAAD,OACCC,EAAYL,KAAKH,MAAMC,MAAMK,KAAI,SAAAlB,GAAI,OAAI,kBAAC,EAAD,CAAUqB,IAAKrB,EAAKI,GAAIJ,KAAMA,EAC7EG,aAAc,EAAKA,kBAEnB,OACI,yBAAKN,UAAU,aACVuB,O,GA/BGE,IAAMC,WCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8b9dbaca.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    \r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input \r\n                type=\"checkbox\" \r\n                checked={props.item.completed} \r\n                onChange={() => props.handleChange(props.item.id)}\r\n            />\r\n            <p style = {props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Study react until phase 7\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"CSS lesson 1\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Begin Spotify web app\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Kanji\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Japanese Grammar\",\r\n        completed: false\r\n    }\r\n    ,\r\n    {\r\n        id: 6,\r\n        text: \"Japanese Reading\",\r\n        completed: false\r\n    }\r\n    ,\r\n    {\r\n        id: 7,\r\n        text: \"Message Tamura about food\",\r\n        completed: false\r\n    }\r\n    ,\r\n    {\r\n        id: 8,\r\n        text: \"Package return items\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport todosData from \"./todosData\"\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n        todos: todosData\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(id){\n\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo\n      })\n      return {\n        todos: updatedTodos\n      }\n    })\n  }\n\n\n  render() {\n      const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item}\n      handleChange={this.handleChange}/>)\n\n      return (\n          <div className=\"todo-list\">\n              {todoItems}\n          </div>\n      )\n  }\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}